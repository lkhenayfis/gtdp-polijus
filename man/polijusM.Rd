% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classe_polijusM.r
\name{polijusM}
\alias{polijusM}
\alias{new_polijusM}
\alias{print.polijusM}
\alias{coef.polijusM}
\alias{fitted.polijusM}
\alias{predicted.polijusM}
\alias{residuals.polijusM}
\alias{summary.polijusM}
\title{Objeto \code{polijusM}}
\usage{
new_polijusM(datorig, polibase, l_poliind)

\method{print}{polijusM}(x, ...)

\method{coef}{polijusM}(object, ...)

\method{fitted}{polijusM}(object, ...)

predicted.polijusM(object, newdata, ...)

\method{residuals}{polijusM}(object, ...)

\method{summary}{polijusM}(object, ...)
}
\arguments{
\item{datorig}{objeto \code{datpoli} contendo os dados originais utilizados para ajuste}

\item{polibase}{curva base ajustada}

\item{l_poliind}{lista de curvas individuais ajustadas}

\item{x}{objeto \code{polijusM}}

\item{...}{demais parâmetros}

\item{object}{objeto tipo \code{polijusM}}

\item{newdata}{data.frame ou data.table opcional contendo dados com os quais realizar previsão}
}
\value{
objeto \code{polijusM}, uma lista contendo
\describe{
\item{curvas}{lista de curvas ajustadas ao dado}
\item{model}{dado de vazao, nível de jusante e monstante representados pela função ajustada}
}

Adicionalmente possui atributos
\describe{
\item{cod}{código da usina ajustada}
\item{ncurvas}{número de curvas ajustadas}
\item{npolis}{número de polinômios por curva}
\item{refs}{níveis de montante de referência para cada curva ajustda}
}
}
\description{
Contrutor e métodos da classe \code{polijusM} -- curva de jusante multivariada
}
\details{
Construtor primário de objetos \code{polijusM}
}
\examples{

# ajusta uma curva base --------------------------------
datbase <- extraibase(dummydata)

ext   <- 1
graus <- list(2:4, 2:4)

maxvaz   <- 1.1 * datbase$hist[, max(vazao)]
pto_ext0 <- c(maxvaz, dummydata$ext[[ext]](maxvaz))

polibase <- optpoli(datbase, ext, graus, pto_ext0 = pto_ext0)[[2]]

# seleciona e ajusta curvas individuais ----------------

l_datind <- extraipats(dummydata, polibase, 10)
l_poliind <- lapply(l_datind, function(dat) {
    optpoli(dat, polibase, list(2:4), vaz_ext0 = dat[, max(vazao)])
})

# monta objeto final -----------------------------------

polijus <- new_polijusM(dummydata, polibase, l_poliind)

\dontrun{
    print(polijus)
    coef(polijus)
    summary(polijus)
    plot(polijus)
}

}
