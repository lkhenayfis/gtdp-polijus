% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polinomios.r
\name{fitpoli}
\alias{fitpoli}
\alias{fitpoli.datcbase}
\alias{fitpoli.default}
\title{Ajuste de curvas polinomiais por partes}
\usage{
fitpoli(dat, ext, graus, pto_turbmax, ...)

\method{fitpoli}{datcbase}(dat, ext, graus, pto_turbmax, pto_ext)

\method{fitpoli}{default}(dat, ext, graus, pto_turbmax, vaz_ext, zero_forcado)
}
\arguments{
\item{dat}{objeto do tipo \code{datcbase} ou \code{data.table}. Ver Detalhes}

\item{ext}{dado para extensão do ajuste. Ver Detalhes}

\item{graus}{vetor de até três posições indicando os graus de cada parte polinomial. Ver Detalhes}

\item{pto_turbmax}{vetor de duas posicoes indicando coordenadas da conexão entre polinômios
ajustados aos dados históricos}

\item{...}{demais parâmetros específicos de cada método. Ver Detalhes}

\item{pto_ext}{vetor de duas posicoes indicando coordenadas da conexão entre último polinômio
ajustados aos dados históricos e polinômio dos dados de extensão}

\item{vaz_ext}{escalar indicando a vazão da conexão entre último polinômio ajustados aos dados
históricos e curva base}

\item{zero_forcado}{booleano indicando se o A0 deve ser restrito igual ao patamar de referência}
}
\value{
objeto \code{polijusU}, uma lista contendo
\describe{
\item{coef}{lista de coeficientes por parte polinomial ajustada}
\item{bounds}{lista de limites do domínio de cada parte polinomial ajustada}
\item{model}{dado de vazao e nível ajustado com coluna de indicador da parte polinomial}
\item{vcov}{matriz de variâncias e covariâncias dos coeficientes ajustados}
\item{fitted}{vetor de pontos ajustados}
}

Adicionalmente possui atributos
\describe{
\item{npoli}{número de partes polinomiais ajustadas}
\item{graus}{vetor de graus das partes polinomiais}
\item{tipo}{o tipo de ajuste realizado}
\item{tag}{string indicando o nome do ajuste (curva base, patamar XXX, etc)}
}
}
\description{
Genérica e métodos para ajuste das curvas polinomiais por partes a cada conjunto de dados
}
\section{Curva base}{


Quando \code{dat} é da classe \code{datcbase} o ajuste da curva pode conter até três partes
polinomiais de até quarto grau. Existem quatro possíveis configurações de ajuste

\itemize{
\item Um polinômio para os dados históricos e nenhum de extensão (tipo \code{H1})
\item Dois polinômios para os dados históricos e nenhum de extensão (tipo \code{H2})
\item Um polinômio para os dados históricos e um para dados de extensão (tipo \code{H1E1})
\item Dois polinômios para os dados históricos e um para dados de extensão (tipo \code{H2E1})
}

Qual ajuste será realizado é decidido internamente em função dos parâmetros passados para a
função.

Ajustes do tipo \code{H1} exigem apenas \code{dat} e \code{graus}, sendo este um escalar (mais
posições serão ignoradas). Qualquer outro parâmetro fornecido além destes dois levará a função a
tentar ajustar formas mais complexas

Ajustes do tipo \code{H2} demandam \code{dat}, \code{graus} e \code{pto_turbmax}. O dado de
extensão deve ser fornecido ou como um inteiro ou string indicando qual dado da lista deve ser
usado (use \code{polijus::plot.datcbase} para visualizar as opções). \code{graus} deve conter
dois elementos e \code{pto_turbmax} deve ser um vetor de duas posições indicando o ponto de
conexão entre os dois polinômios (forma c(vazao, njus)).

Para ajustar uma configuração \code{H1E1}, os parâmetros necessários são \code{dat}, \code{ext} e
\code{graus} \code{pto_ext}. \code{ext} pode ser um inteiro ou strig indicando qual dos dados de
extensão deve ser usado em conjunto com o histórico (use \code{polijus::plot.datcbase} para
visualizar as opções). \code{graus} deve conter dois elementos e \code{pto_ext} indica o ponto de
conexão entre polinômio para histórico e polinômio de extensão (no mesmo molde
\code{pto_turbmax}).

Deve ser notado que o conjunto de parâmetros para \code{H2} e \code{H1E1} são similares bem
similares. Para evitar problemas, caso seja fornecido um conjunto de parâmetros ambíguos à
\code{fitpoli}, a função tentará realizar um ajuste do tipo \code{H1E1}, ignorando os parâmetros
associados ao tipo \code{H2}. Caso não haja parâmetros suficientes para realizar o \code{H1E1},
é retornado erro.

Finalmente, um ajuste do tipo \code{H2E1} demanda o fornecimento de todos os parâmetros
anteriormente citados, da forma como foram detalhados, exceto por \code{graus} que agora deveria
conter 3 elementos.
}

\section{Curvas individuais}{


Quando \code{dat} é um data.table comum a função assume que se trata de um ajuste de curvas
individuais por patamar. As regras de ajuste da curva neste caso são muito similares àquelas
aplicadas à curva base, com algumas pequenas distinções.

As curvas para patamares individuais também estão restritas a três partes polinomiais, porém por
construção estas curvas necessariamente devem convergir com a curva base, de modo que a(s)
última(s) partes polinomiais são polinômios da curva base. Desta forma, são possíveis duas
configurações de ajuste

\itemize{
\item Um polinômio para dados históricos e um ou dois da curva base sem zero forcado (H1z0)
\item Um polinômio para dados históricos e um ou dois da curva base com zero forcado (H1z1)
\item Dois polinômios para dados históricos e apenas um da curva base sem zero forcado (H2z0)
\item Dois polinômios para dados históricos e apenas um da curva base com zero forcado (H2z1)
}

É importante ressaltar que, no caso de serem usados dois polinômios para representação do patamar
individual, a conexão com a curva base \bold{NECESSARIAMENTE} deverá ocorrer dentro do domínio do
último polinômio que a compõe.

\code{dat}, \code{graus} e \code{pto_turbmax} são utilizdos exatamente como no método de ajuste
da curva base, com a exceção de que \code{graus} aqui é de tamanho máximo igual a 2.

\code{ext} é obrigatório para ajuste de polinômios individuais. Deve ser um objeto
\code{polijusU} contendo ajuste da curva base na qual convergir. Ver Exemplos.

\code{vaz_ext} funciona de forma similar a \code{pto_ext} no método para curva base, com a
exceção de que aqui só é necessário fornecer uma vazão e não uma coordenada (vazão, nível). Isto
é natural, pois a convergência entre polinômios de patamares individuais deve ocorrer exatamente
em um ponto da curva base (portanto o nível do ponto de convergência é calculado para a dada
vazão)

\code{zero_forcado} indica se deve ser utilizada a restriçao que garante intercepto igual ao
nível de referência para o qual se ajusta a curva
}

\examples{

# METODO datcbase 

dbase <- extraibase(dummydata)

# ajuste de curva base H1
polibase <- fitpoli(dbase, graus = 3)

# ajuste de curva base H2
polibase <- fitpoli(dbase, graus = c(3, 3), pto_turbmax = c(400, 32.1))

# ajuste de curva base H1E1
polibase <- fitpoli(dat, ext = "CAD", graus = c(3, 3), pto_ext = c(1000, 34))
polibase <- fitpoli(dat, ext = 1, graus = c(3, 3), pto_ext = c(1000, 34)) # mesma coisa que acima

# ajuste de curva base H2E1
polibase <- fitpoli(dat, ext = "CAD", graus = c(3, 3, 3), pto_turbmax = c(400, 32.1), 
    pto_ext = c(1000, 34))

}
\seealso{
\code{polijusU} para detalhes do objeto retornado
}
